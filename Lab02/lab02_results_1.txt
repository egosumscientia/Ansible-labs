pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ cd terraform/
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02/terraform$ terraform init
Initializing the backend...
Initializing provider plugins...
- Finding hashicorp/azurerm versions matching "~> 3.0"...
- Installing hashicorp/azurerm v3.117.1...
- Installed hashicorp/azurerm v3.117.1 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02/terraform$ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform planned the following actions, but then encountered a problem:

  # azurerm_linux_virtual_machine.main[0] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-0"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "ansible-lab-rg"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_linux_virtual_machine.main[1] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-1"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "ansible-lab-rg"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_network_interface.main[0] will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "vm-0-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "ansible-lab-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface.main[1] will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "vm-1-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "ansible-lab-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_public_ip.vm[0] will be created
  + resource "azurerm_public_ip" "vm" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-0-pip"
      + resource_group_name     = "ansible-lab-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_public_ip.vm[1] will be created
  + resource "azurerm_public_ip" "vm" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-1-pip"
      + resource_group_name     = "ansible-lab-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.ansible_lab will be created
  + resource "azurerm_resource_group" "ansible_lab" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "ansible-lab-rg"
    }

  # azurerm_subnet.internal will be created
  + resource "azurerm_subnet" "internal" {
      + address_prefixes                               = [
          + "10.0.2.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "internal"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "ansible-lab-rg"
      + virtual_network_name                           = "ansible-vnet"
    }

  # azurerm_virtual_network.main will be created
  + resource "azurerm_virtual_network" "main" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "ansible-vnet"
      + resource_group_name = "ansible-lab-rg"
      + subnet              = (known after apply)
    }

Plan: 9 to add, 0 to change, 0 to destroy.
╷
│ Error: Unsupported attribute
│ 
│   on main.tf line 83, in output "vm_public_ips":
│   83:     vm.name => azurerm_public_ip.vm[vm.count.index].ip_address
│ 
│ This object does not have an attribute named "count".
╵
╷
│ Error: Unsupported attribute
│ 
│   on main.tf line 83, in output "vm_public_ips":
│   83:     vm.name => azurerm_public_ip.vm[vm.count.index].ip_address
│ 
│ This object does not have an attribute named "count".
╵
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02/terraform$ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.main[0] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-0"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "ansible-lab-rg"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_linux_virtual_machine.main[1] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-1"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "ansible-lab-rg"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_network_interface.main[0] will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "vm-0-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "ansible-lab-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface.main[1] will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "vm-1-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "ansible-lab-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_public_ip.vm[0] will be created
  + resource "azurerm_public_ip" "vm" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-0-pip"
      + resource_group_name     = "ansible-lab-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_public_ip.vm[1] will be created
  + resource "azurerm_public_ip" "vm" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-1-pip"
      + resource_group_name     = "ansible-lab-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.ansible_lab will be created
  + resource "azurerm_resource_group" "ansible_lab" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "ansible-lab-rg"
    }

  # azurerm_subnet.internal will be created
  + resource "azurerm_subnet" "internal" {
      + address_prefixes                               = [
          + "10.0.2.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "internal"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "ansible-lab-rg"
      + virtual_network_name                           = "ansible-vnet"
    }

  # azurerm_virtual_network.main will be created
  + resource "azurerm_virtual_network" "main" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "ansible-vnet"
      + resource_group_name = "ansible-lab-rg"
      + subnet              = (known after apply)
    }

Plan: 9 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + vm_public_ips = {
      + vm-0 = (known after apply)
      + vm-1 = (known after apply)
    }

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02/terraform$ terraform apply -auto-approve

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.main[0] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-0"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "ansible-lab-rg"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_linux_virtual_machine.main[1] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "vm-1"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "ansible-lab-rg"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_network_interface.main[0] will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "vm-0-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "ansible-lab-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface.main[1] will be created
  + resource "azurerm_network_interface" "main" {
      + accelerated_networking_enabled = (known after apply)
      + applied_dns_servers            = (known after apply)
      + dns_servers                    = (known after apply)
      + enable_accelerated_networking  = (known after apply)
      + enable_ip_forwarding           = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = (known after apply)
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "vm-1-nic"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "ansible-lab-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_public_ip.vm[0] will be created
  + resource "azurerm_public_ip" "vm" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-0-pip"
      + resource_group_name     = "ansible-lab-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_public_ip.vm[1] will be created
  + resource "azurerm_public_ip" "vm" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-1-pip"
      + resource_group_name     = "ansible-lab-rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.ansible_lab will be created
  + resource "azurerm_resource_group" "ansible_lab" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "ansible-lab-rg"
    }

  # azurerm_subnet.internal will be created
  + resource "azurerm_subnet" "internal" {
      + address_prefixes                               = [
          + "10.0.2.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "internal"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "ansible-lab-rg"
      + virtual_network_name                           = "ansible-vnet"
    }

  # azurerm_virtual_network.main will be created
  + resource "azurerm_virtual_network" "main" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "ansible-vnet"
      + resource_group_name = "ansible-lab-rg"
      + subnet              = (known after apply)
    }

Plan: 9 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + vm_public_ips = {
      + vm-0 = (known after apply)
      + vm-1 = (known after apply)
    }
azurerm_resource_group.ansible_lab: Creating...
azurerm_resource_group.ansible_lab: Still creating... [10s elapsed]
azurerm_resource_group.ansible_lab: Creation complete after 16s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg]
azurerm_public_ip.vm[0]: Creating...
azurerm_public_ip.vm[1]: Creating...
azurerm_virtual_network.main: Creating...
azurerm_public_ip.vm[0]: Creation complete after 6s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Network/publicIPAddresses/vm-0-pip]
azurerm_public_ip.vm[1]: Creation complete after 6s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Network/publicIPAddresses/vm-1-pip]
azurerm_virtual_network.main: Creation complete after 9s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Network/virtualNetworks/ansible-vnet]
azurerm_subnet.internal: Creating...
azurerm_subnet.internal: Creation complete after 9s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Network/virtualNetworks/ansible-vnet/subnets/internal]
azurerm_network_interface.main[1]: Creating...
azurerm_network_interface.main[0]: Creating...
azurerm_network_interface.main[1]: Still creating... [10s elapsed]
azurerm_network_interface.main[0]: Still creating... [10s elapsed]
azurerm_network_interface.main[0]: Creation complete after 15s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Network/networkInterfaces/vm-0-nic]
azurerm_network_interface.main[1]: Still creating... [20s elapsed]
azurerm_network_interface.main[1]: Creation complete after 30s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Network/networkInterfaces/vm-1-nic]
azurerm_linux_virtual_machine.main[0]: Creating...
azurerm_linux_virtual_machine.main[1]: Creating...
azurerm_linux_virtual_machine.main[0]: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.main[1]: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.main[0]: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.main[1]: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.main[1]: Creation complete after 23s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Compute/virtualMachines/vm-1]
azurerm_linux_virtual_machine.main[0]: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.main[0]: Still creating... [40s elapsed]
azurerm_linux_virtual_machine.main[0]: Still creating... [50s elapsed]
azurerm_linux_virtual_machine.main[0]: Creation complete after 57s [id=/subscriptions/5f55b5a1-09ef-4b87-b02d-30e1a8347b3d/resourceGroups/ansible-lab-rg/providers/Microsoft.Compute/virtualMachines/vm-0]

Apply complete! Resources: 9 added, 0 changed, 0 destroyed.

Outputs:

vm_public_ips = {
  "vm-0" = ""
  "vm-1" = ""
}
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02/terraform$ az vm list-ip-addresses -g ansible-lab-rg -o table
VirtualMachine    PublicIPAddresses    PrivateIPAddresses
----------------  -------------------  --------------------
vm-0              172.203.159.58       10.0.2.4
vm-1              172.190.22.184       10.0.2.5
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02/terraform$ cd ..
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ ansible all -i inventory/inventory.ini -m ping
vm0 | FAILED! => {
    "msg": "to use the 'ssh' connection type with passwords or pkcs11_provider, you must install the sshpass program"
}
vm1 | FAILED! => {
    "msg": "to use the 'ssh' connection type with passwords or pkcs11_provider, you must install the sshpass program"
}
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ 
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ 
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ 
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ sudo apt-get install sshpass  # Para Ubuntu/Debian
[sudo] password for pauloenrique: 
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  sshpass
0 upgraded, 1 newly installed, 0 to remove and 9 not upgraded.
Need to get 11.7 kB of archives.
After this operation, 35.8 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu noble/universe amd64 sshpass amd64 1.09-1 [11.7 kB]
Fetched 11.7 kB in 0s (37.0 kB/s)  
Selecting previously unselected package sshpass.
(Reading database ... 329781 files and directories currently installed.)
Preparing to unpack .../sshpass_1.09-1_amd64.deb ...
Unpacking sshpass (1.09-1) ...
Setting up sshpass (1.09-1) ...
Processing triggers for man-db (2.12.0-4build2) ...
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ ansible all -i inventory/inventory.ini -m ping
vm1 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
vm0 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ # Recolectar información del sistema
ansible all -i inventory/inventory.ini -m setup -a "filter=ansible_distribution*"
vm0 | SUCCESS => {
    "ansible_facts": {
        "ansible_distribution": "Ubuntu",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/os-release",
        "ansible_distribution_file_variety": "Debian",
        "ansible_distribution_major_version": "18",
        "ansible_distribution_release": "bionic",
        "ansible_distribution_version": "18.04",
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false
}
vm1 | SUCCESS => {
    "ansible_facts": {
        "ansible_distribution": "Ubuntu",
        "ansible_distribution_file_parsed": true,
        "ansible_distribution_file_path": "/etc/os-release",
        "ansible_distribution_file_variety": "Debian",
        "ansible_distribution_major_version": "18",
        "ansible_distribution_release": "bionic",
        "ansible_distribution_version": "18.04",
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false
}
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ # Verificar espacio en disco
ansible all -i inventory/inventory.ini -m shell -a "df -h"
vm0 | CHANGED | rc=0 >>
Filesystem      Size  Used Avail Use% Mounted on
udev            439M     0  439M   0% /dev
tmpfs            92M  704K   91M   1% /run
/dev/sdb1        29G  1.4G   28G   5% /
tmpfs           457M     0  457M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           457M     0  457M   0% /sys/fs/cgroup
/dev/sdb15      105M  5.3M  100M   5% /boot/efi
/dev/sda1       3.9G   28K  3.7G   1% /mnt
tmpfs            92M     0   92M   0% /run/user/1000
vm1 | CHANGED | rc=0 >>
Filesystem      Size  Used Avail Use% Mounted on
udev            439M     0  439M   0% /dev
tmpfs            92M  700K   91M   1% /run
/dev/sda1        29G  1.4G   28G   5% /
tmpfs           457M     0  457M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           457M     0  457M   0% /sys/fs/cgroup
/dev/sda15      105M  5.3M  100M   5% /boot/efi
/dev/sdb1       3.9G   28K  3.7G   1% /mnt
tmpfs            92M     0   92M   0% /run/user/1000
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ ansible web_servers -i inventory/inventory.ini -b -m apt -a "name=nginx state=present"
vm0 | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "cache_update_time": 1705395110,
    "cache_updated": false,
    "changed": true,
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0\n  libjpeg-turbo8 libjpeg8 libnginx-mod-http-geoip\n  libnginx-mod-http-image-filter libnginx-mod-http-xslt-filter\n  libnginx-mod-mail libnginx-mod-stream libtiff5 libwebp6 libxpm4 nginx-common\n  nginx-core\nSuggested packages:\n  libgd-tools fcgiwrap nginx-doc ssl-cert\nThe following NEW packages will be installed:\n  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0\n  libjpeg-turbo8 libjpeg8 libnginx-mod-http-geoip\n  libnginx-mod-http-image-filter libnginx-mod-http-xslt-filter\n  libnginx-mod-mail libnginx-mod-stream libtiff5 libwebp6 libxpm4 nginx\n  nginx-common nginx-core\n0 upgraded, 18 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 2464 kB of archives.\nAfter this operation, 8218 kB of additional disk space will be used.\nGet:1 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libjpeg-turbo8 amd64 1.5.2-0ubuntu5.18.04.6 [111 kB]\nGet:2 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 fonts-dejavu-core all 2.37-1 [1041 kB]\nGet:3 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 fontconfig-config all 2.12.6-0ubuntu2 [55.8 kB]\nGet:4 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 libfontconfig1 amd64 2.12.6-0ubuntu2 [137 kB]\nGet:5 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 libjpeg8 amd64 8c-2ubuntu8 [2194 B]\nGet:6 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libjbig0 amd64 2.1-3.1ubuntu0.18.04.1 [27.0 kB]\nGet:7 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libtiff5 amd64 4.0.9-5ubuntu0.10 [154 kB]\nGet:8 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwebp6 amd64 0.6.1-2ubuntu0.18.04.2 [186 kB]\nGet:9 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxpm4 amd64 1:3.5.12-1ubuntu0.18.04.2 [34.8 kB]\nGet:10 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libgd3 amd64 2.2.5-4ubuntu0.5 [119 kB]\nGet:11 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 nginx-common all 1.14.0-0ubuntu1.11 [37.2 kB]\nGet:12 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-http-geoip amd64 1.14.0-0ubuntu1.11 [11.0 kB]\nGet:13 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-http-image-filter amd64 1.14.0-0ubuntu1.11 [14.3 kB]\nGet:14 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-http-xslt-filter amd64 1.14.0-0ubuntu1.11 [12.8 kB]\nGet:15 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-mail amd64 1.14.0-0ubuntu1.11 [41.8 kB]\nGet:16 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-stream amd64 1.14.0-0ubuntu1.11 [63.5 kB]\nGet:17 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 nginx-core amd64 1.14.0-0ubuntu1.11 [413 kB]\nGet:18 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 nginx all 1.14.0-0ubuntu1.11 [3596 B]\nPreconfiguring packages ...\nFetched 2464 kB in 0s (26.7 MB/s)\nSelecting previously unselected package libjpeg-turbo8:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 59190 files and directories currently installed.)\r\nPreparing to unpack .../00-libjpeg-turbo8_1.5.2-0ubuntu5.18.04.6_amd64.deb ...\r\nUnpacking libjpeg-turbo8:amd64 (1.5.2-0ubuntu5.18.04.6) ...\r\nSelecting previously unselected package fonts-dejavu-core.\r\nPreparing to unpack .../01-fonts-dejavu-core_2.37-1_all.deb ...\r\nUnpacking fonts-dejavu-core (2.37-1) ...\r\nSelecting previously unselected package fontconfig-config.\r\nPreparing to unpack .../02-fontconfig-config_2.12.6-0ubuntu2_all.deb ...\r\nUnpacking fontconfig-config (2.12.6-0ubuntu2) ...\r\nSelecting previously unselected package libfontconfig1:amd64.\r\nPreparing to unpack .../03-libfontconfig1_2.12.6-0ubuntu2_amd64.deb ...\r\nUnpacking libfontconfig1:amd64 (2.12.6-0ubuntu2) ...\r\nSelecting previously unselected package libjpeg8:amd64.\r\nPreparing to unpack .../04-libjpeg8_8c-2ubuntu8_amd64.deb ...\r\nUnpacking libjpeg8:amd64 (8c-2ubuntu8) ...\r\nSelecting previously unselected package libjbig0:amd64.\r\nPreparing to unpack .../05-libjbig0_2.1-3.1ubuntu0.18.04.1_amd64.deb ...\r\nUnpacking libjbig0:amd64 (2.1-3.1ubuntu0.18.04.1) ...\r\nSelecting previously unselected package libtiff5:amd64.\r\nPreparing to unpack .../06-libtiff5_4.0.9-5ubuntu0.10_amd64.deb ...\r\nUnpacking libtiff5:amd64 (4.0.9-5ubuntu0.10) ...\r\nSelecting previously unselected package libwebp6:amd64.\r\nPreparing to unpack .../07-libwebp6_0.6.1-2ubuntu0.18.04.2_amd64.deb ...\r\nUnpacking libwebp6:amd64 (0.6.1-2ubuntu0.18.04.2) ...\r\nSelecting previously unselected package libxpm4:amd64.\r\nPreparing to unpack .../08-libxpm4_1%3a3.5.12-1ubuntu0.18.04.2_amd64.deb ...\r\nUnpacking libxpm4:amd64 (1:3.5.12-1ubuntu0.18.04.2) ...\r\nSelecting previously unselected package libgd3:amd64.\r\nPreparing to unpack .../09-libgd3_2.2.5-4ubuntu0.5_amd64.deb ...\r\nUnpacking libgd3:amd64 (2.2.5-4ubuntu0.5) ...\r\nSelecting previously unselected package nginx-common.\r\nPreparing to unpack .../10-nginx-common_1.14.0-0ubuntu1.11_all.deb ...\r\nUnpacking nginx-common (1.14.0-0ubuntu1.11) ...\r\nSelecting previously unselected package libnginx-mod-http-geoip.\r\nPreparing to unpack .../11-libnginx-mod-http-geoip_1.14.0-0ubuntu1.11_amd64.deb ...\r\nUnpacking libnginx-mod-http-geoip (1.14.0-0ubuntu1.11) ...\r\nSelecting previously unselected package libnginx-mod-http-image-filter.\r\nPreparing to unpack .../12-libnginx-mod-http-image-filter_1.14.0-0ubuntu1.11_amd64.deb ...\r\nUnpacking libnginx-mod-http-image-filter (1.14.0-0ubuntu1.11) ...\r\nSelecting previously unselected package libnginx-mod-http-xslt-filter.\r\nPreparing to unpack .../13-libnginx-mod-http-xslt-filter_1.14.0-0ubuntu1.11_amd64.deb ...\r\nUnpacking libnginx-mod-http-xslt-filter (1.14.0-0ubuntu1.11) ...\r\nSelecting previously unselected package libnginx-mod-mail.\r\nPreparing to unpack .../14-libnginx-mod-mail_1.14.0-0ubuntu1.11_amd64.deb ...\r\nUnpacking libnginx-mod-mail (1.14.0-0ubuntu1.11) ...\r\nSelecting previously unselected package libnginx-mod-stream.\r\nPreparing to unpack .../15-libnginx-mod-stream_1.14.0-0ubuntu1.11_amd64.deb ...\r\nUnpacking libnginx-mod-stream (1.14.0-0ubuntu1.11) ...\r\nSelecting previously unselected package nginx-core.\r\nPreparing to unpack .../16-nginx-core_1.14.0-0ubuntu1.11_amd64.deb ...\r\nUnpacking nginx-core (1.14.0-0ubuntu1.11) ...\r\nSelecting previously unselected package nginx.\r\nPreparing to unpack .../17-nginx_1.14.0-0ubuntu1.11_all.deb ...\r\nUnpacking nginx (1.14.0-0ubuntu1.11) ...\r\nSetting up libjbig0:amd64 (2.1-3.1ubuntu0.18.04.1) ...\r\nSetting up fonts-dejavu-core (2.37-1) ...\r\nSetting up nginx-common (1.14.0-0ubuntu1.11) ...\r\nCreated symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /lib/systemd/system/nginx.service.\r\nSetting up libjpeg-turbo8:amd64 (1.5.2-0ubuntu5.18.04.6) ...\r\nSetting up libnginx-mod-mail (1.14.0-0ubuntu1.11) ...\r\nSetting up libxpm4:amd64 (1:3.5.12-1ubuntu0.18.04.2) ...\r\nSetting up libnginx-mod-http-xslt-filter (1.14.0-0ubuntu1.11) ...\r\nSetting up libnginx-mod-http-geoip (1.14.0-0ubuntu1.11) ...\r\nSetting up libwebp6:amd64 (0.6.1-2ubuntu0.18.04.2) ...\r\nSetting up libjpeg8:amd64 (8c-2ubuntu8) ...\r\nSetting up fontconfig-config (2.12.6-0ubuntu2) ...\r\nSetting up libnginx-mod-stream (1.14.0-0ubuntu1.11) ...\r\nSetting up libtiff5:amd64 (4.0.9-5ubuntu0.10) ...\r\nSetting up libfontconfig1:amd64 (2.12.6-0ubuntu2) ...\r\nSetting up libgd3:amd64 (2.2.5-4ubuntu0.5) ...\r\nSetting up libnginx-mod-http-image-filter (1.14.0-0ubuntu1.11) ...\r\nSetting up nginx-core (1.14.0-0ubuntu1.11) ...\r\nSetting up nginx (1.14.0-0ubuntu1.11) ...\r\nProcessing triggers for systemd (237-3ubuntu10.57) ...\r\nProcessing triggers for man-db (2.8.3-2ubuntu0.1) ...\r\nProcessing triggers for ufw (0.36-0ubuntu0.18.04.2) ...\r\nProcessing triggers for ureadahead (0.100.0-21) ...\r\nProcessing triggers for libc-bin (2.27-3ubuntu1.6) ...\r\n",
    "stdout_lines": [
        "Reading package lists...",
        "Building dependency tree...",
        "Reading state information...",
        "The following additional packages will be installed:",
        "  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0",
        "  libjpeg-turbo8 libjpeg8 libnginx-mod-http-geoip",
        "  libnginx-mod-http-image-filter libnginx-mod-http-xslt-filter",
        "  libnginx-mod-mail libnginx-mod-stream libtiff5 libwebp6 libxpm4 nginx-common",
        "  nginx-core",
        "Suggested packages:",
        "  libgd-tools fcgiwrap nginx-doc ssl-cert",
        "The following NEW packages will be installed:",
        "  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0",
        "  libjpeg-turbo8 libjpeg8 libnginx-mod-http-geoip",
        "  libnginx-mod-http-image-filter libnginx-mod-http-xslt-filter",
        "  libnginx-mod-mail libnginx-mod-stream libtiff5 libwebp6 libxpm4 nginx",
        "  nginx-common nginx-core",
        "0 upgraded, 18 newly installed, 0 to remove and 0 not upgraded.",
        "Need to get 2464 kB of archives.",
        "After this operation, 8218 kB of additional disk space will be used.",
        "Get:1 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libjpeg-turbo8 amd64 1.5.2-0ubuntu5.18.04.6 [111 kB]",
        "Get:2 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 fonts-dejavu-core all 2.37-1 [1041 kB]",
        "Get:3 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 fontconfig-config all 2.12.6-0ubuntu2 [55.8 kB]",
        "Get:4 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 libfontconfig1 amd64 2.12.6-0ubuntu2 [137 kB]",
        "Get:5 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 libjpeg8 amd64 8c-2ubuntu8 [2194 B]",
        "Get:6 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libjbig0 amd64 2.1-3.1ubuntu0.18.04.1 [27.0 kB]",
        "Get:7 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libtiff5 amd64 4.0.9-5ubuntu0.10 [154 kB]",
        "Get:8 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libwebp6 amd64 0.6.1-2ubuntu0.18.04.2 [186 kB]",
        "Get:9 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libxpm4 amd64 1:3.5.12-1ubuntu0.18.04.2 [34.8 kB]",
        "Get:10 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libgd3 amd64 2.2.5-4ubuntu0.5 [119 kB]",
        "Get:11 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 nginx-common all 1.14.0-0ubuntu1.11 [37.2 kB]",
        "Get:12 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-http-geoip amd64 1.14.0-0ubuntu1.11 [11.0 kB]",
        "Get:13 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-http-image-filter amd64 1.14.0-0ubuntu1.11 [14.3 kB]",
        "Get:14 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-http-xslt-filter amd64 1.14.0-0ubuntu1.11 [12.8 kB]",
        "Get:15 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-mail amd64 1.14.0-0ubuntu1.11 [41.8 kB]",
        "Get:16 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libnginx-mod-stream amd64 1.14.0-0ubuntu1.11 [63.5 kB]",
        "Get:17 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 nginx-core amd64 1.14.0-0ubuntu1.11 [413 kB]",
        "Get:18 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 nginx all 1.14.0-0ubuntu1.11 [3596 B]",
        "Preconfiguring packages ...",
        "Fetched 2464 kB in 0s (26.7 MB/s)",
        "Selecting previously unselected package libjpeg-turbo8:amd64.",
        "(Reading database ... ",
        "(Reading database ... 5%",
        "(Reading database ... 10%",
        "(Reading database ... 15%",
        "(Reading database ... 20%",
        "(Reading database ... 25%",
        "(Reading database ... 30%",
        "(Reading database ... 35%",
        "(Reading database ... 40%",
        "(Reading database ... 45%",
        "(Reading database ... 50%",
        "(Reading database ... 55%",
        "(Reading database ... 60%",
        "(Reading database ... 65%",
        "(Reading database ... 70%",
        "(Reading database ... 75%",
        "(Reading database ... 80%",
        "(Reading database ... 85%",
        "(Reading database ... 90%",
        "(Reading database ... 95%",
        "(Reading database ... 100%",
        "(Reading database ... 59190 files and directories currently installed.)",
        "Preparing to unpack .../00-libjpeg-turbo8_1.5.2-0ubuntu5.18.04.6_amd64.deb ...",
        "Unpacking libjpeg-turbo8:amd64 (1.5.2-0ubuntu5.18.04.6) ...",
        "Selecting previously unselected package fonts-dejavu-core.",
        "Preparing to unpack .../01-fonts-dejavu-core_2.37-1_all.deb ...",
        "Unpacking fonts-dejavu-core (2.37-1) ...",
        "Selecting previously unselected package fontconfig-config.",
        "Preparing to unpack .../02-fontconfig-config_2.12.6-0ubuntu2_all.deb ...",
        "Unpacking fontconfig-config (2.12.6-0ubuntu2) ...",
        "Selecting previously unselected package libfontconfig1:amd64.",
        "Preparing to unpack .../03-libfontconfig1_2.12.6-0ubuntu2_amd64.deb ...",
        "Unpacking libfontconfig1:amd64 (2.12.6-0ubuntu2) ...",
        "Selecting previously unselected package libjpeg8:amd64.",
        "Preparing to unpack .../04-libjpeg8_8c-2ubuntu8_amd64.deb ...",
        "Unpacking libjpeg8:amd64 (8c-2ubuntu8) ...",
        "Selecting previously unselected package libjbig0:amd64.",
        "Preparing to unpack .../05-libjbig0_2.1-3.1ubuntu0.18.04.1_amd64.deb ...",
        "Unpacking libjbig0:amd64 (2.1-3.1ubuntu0.18.04.1) ...",
        "Selecting previously unselected package libtiff5:amd64.",
        "Preparing to unpack .../06-libtiff5_4.0.9-5ubuntu0.10_amd64.deb ...",
        "Unpacking libtiff5:amd64 (4.0.9-5ubuntu0.10) ...",
        "Selecting previously unselected package libwebp6:amd64.",
        "Preparing to unpack .../07-libwebp6_0.6.1-2ubuntu0.18.04.2_amd64.deb ...",
        "Unpacking libwebp6:amd64 (0.6.1-2ubuntu0.18.04.2) ...",
        "Selecting previously unselected package libxpm4:amd64.",
        "Preparing to unpack .../08-libxpm4_1%3a3.5.12-1ubuntu0.18.04.2_amd64.deb ...",
        "Unpacking libxpm4:amd64 (1:3.5.12-1ubuntu0.18.04.2) ...",
        "Selecting previously unselected package libgd3:amd64.",
        "Preparing to unpack .../09-libgd3_2.2.5-4ubuntu0.5_amd64.deb ...",
        "Unpacking libgd3:amd64 (2.2.5-4ubuntu0.5) ...",
        "Selecting previously unselected package nginx-common.",
        "Preparing to unpack .../10-nginx-common_1.14.0-0ubuntu1.11_all.deb ...",
        "Unpacking nginx-common (1.14.0-0ubuntu1.11) ...",
        "Selecting previously unselected package libnginx-mod-http-geoip.",
        "Preparing to unpack .../11-libnginx-mod-http-geoip_1.14.0-0ubuntu1.11_amd64.deb ...",
        "Unpacking libnginx-mod-http-geoip (1.14.0-0ubuntu1.11) ...",
        "Selecting previously unselected package libnginx-mod-http-image-filter.",
        "Preparing to unpack .../12-libnginx-mod-http-image-filter_1.14.0-0ubuntu1.11_amd64.deb ...",
        "Unpacking libnginx-mod-http-image-filter (1.14.0-0ubuntu1.11) ...",
        "Selecting previously unselected package libnginx-mod-http-xslt-filter.",
        "Preparing to unpack .../13-libnginx-mod-http-xslt-filter_1.14.0-0ubuntu1.11_amd64.deb ...",
        "Unpacking libnginx-mod-http-xslt-filter (1.14.0-0ubuntu1.11) ...",
        "Selecting previously unselected package libnginx-mod-mail.",
        "Preparing to unpack .../14-libnginx-mod-mail_1.14.0-0ubuntu1.11_amd64.deb ...",
        "Unpacking libnginx-mod-mail (1.14.0-0ubuntu1.11) ...",
        "Selecting previously unselected package libnginx-mod-stream.",
        "Preparing to unpack .../15-libnginx-mod-stream_1.14.0-0ubuntu1.11_amd64.deb ...",
        "Unpacking libnginx-mod-stream (1.14.0-0ubuntu1.11) ...",
        "Selecting previously unselected package nginx-core.",
        "Preparing to unpack .../16-nginx-core_1.14.0-0ubuntu1.11_amd64.deb ...",
        "Unpacking nginx-core (1.14.0-0ubuntu1.11) ...",
        "Selecting previously unselected package nginx.",
        "Preparing to unpack .../17-nginx_1.14.0-0ubuntu1.11_all.deb ...",
        "Unpacking nginx (1.14.0-0ubuntu1.11) ...",
        "Setting up libjbig0:amd64 (2.1-3.1ubuntu0.18.04.1) ...",
        "Setting up fonts-dejavu-core (2.37-1) ...",
        "Setting up nginx-common (1.14.0-0ubuntu1.11) ...",
        "Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /lib/systemd/system/nginx.service.",
        "Setting up libjpeg-turbo8:amd64 (1.5.2-0ubuntu5.18.04.6) ...",
        "Setting up libnginx-mod-mail (1.14.0-0ubuntu1.11) ...",
        "Setting up libxpm4:amd64 (1:3.5.12-1ubuntu0.18.04.2) ...",
        "Setting up libnginx-mod-http-xslt-filter (1.14.0-0ubuntu1.11) ...",
        "Setting up libnginx-mod-http-geoip (1.14.0-0ubuntu1.11) ...",
        "Setting up libwebp6:amd64 (0.6.1-2ubuntu0.18.04.2) ...",
        "Setting up libjpeg8:amd64 (8c-2ubuntu8) ...",
        "Setting up fontconfig-config (2.12.6-0ubuntu2) ...",
        "Setting up libnginx-mod-stream (1.14.0-0ubuntu1.11) ...",
        "Setting up libtiff5:amd64 (4.0.9-5ubuntu0.10) ...",
        "Setting up libfontconfig1:amd64 (2.12.6-0ubuntu2) ...",
        "Setting up libgd3:amd64 (2.2.5-4ubuntu0.5) ...",
        "Setting up libnginx-mod-http-image-filter (1.14.0-0ubuntu1.11) ...",
        "Setting up nginx-core (1.14.0-0ubuntu1.11) ...",
        "Setting up nginx (1.14.0-0ubuntu1.11) ...",
        "Processing triggers for systemd (237-3ubuntu10.57) ...",
        "Processing triggers for man-db (2.8.3-2ubuntu0.1) ...",
        "Processing triggers for ufw (0.36-0ubuntu0.18.04.2) ...",
        "Processing triggers for ureadahead (0.100.0-21) ...",
        "Processing triggers for libc-bin (2.27-3ubuntu1.6) ..."
    ]
}
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ ansible db_servers -i inventory/inventory.ini -b -m apt -a "name=mysql-client state=present"
vm1 | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "cache_update_time": 1705395110,
    "cache_updated": false,
    "changed": true,
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  libaio1 mysql-client-5.7 mysql-client-core-5.7 mysql-common\nThe following NEW packages will be installed:\n  libaio1 mysql-client mysql-client-5.7 mysql-client-core-5.7 mysql-common\n0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 8804 kB of archives.\nAfter this operation, 62.1 MB of additional disk space will be used.\nGet:1 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libaio1 amd64 0.3.110-5ubuntu0.1 [6476 B]\nGet:2 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 mysql-client-core-5.7 amd64 5.7.42-0ubuntu0.18.04.1 [6752 kB]\nGet:3 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 mysql-common all 5.8+1.0.4 [7308 B]\nGet:4 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 mysql-client-5.7 amd64 5.7.42-0ubuntu0.18.04.1 [2028 kB]\nGet:5 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 mysql-client all 5.7.42-0ubuntu0.18.04.1 [9824 B]\nFetched 8804 kB in 0s (40.1 MB/s)\nSelecting previously unselected package libaio1:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 59190 files and directories currently installed.)\r\nPreparing to unpack .../libaio1_0.3.110-5ubuntu0.1_amd64.deb ...\r\nUnpacking libaio1:amd64 (0.3.110-5ubuntu0.1) ...\r\nSelecting previously unselected package mysql-client-core-5.7.\r\nPreparing to unpack .../mysql-client-core-5.7_5.7.42-0ubuntu0.18.04.1_amd64.deb ...\r\nUnpacking mysql-client-core-5.7 (5.7.42-0ubuntu0.18.04.1) ...\r\nSelecting previously unselected package mysql-common.\r\nPreparing to unpack .../mysql-common_5.8+1.0.4_all.deb ...\r\nUnpacking mysql-common (5.8+1.0.4) ...\r\nSelecting previously unselected package mysql-client-5.7.\r\nPreparing to unpack .../mysql-client-5.7_5.7.42-0ubuntu0.18.04.1_amd64.deb ...\r\nUnpacking mysql-client-5.7 (5.7.42-0ubuntu0.18.04.1) ...\r\nSelecting previously unselected package mysql-client.\r\nPreparing to unpack .../mysql-client_5.7.42-0ubuntu0.18.04.1_all.deb ...\r\nUnpacking mysql-client (5.7.42-0ubuntu0.18.04.1) ...\r\nSetting up mysql-common (5.8+1.0.4) ...\r\nupdate-alternatives: using /etc/mysql/my.cnf.fallback to provide /etc/mysql/my.cnf (my.cnf) in auto mode\r\nSetting up libaio1:amd64 (0.3.110-5ubuntu0.1) ...\r\nSetting up mysql-client-core-5.7 (5.7.42-0ubuntu0.18.04.1) ...\r\nSetting up mysql-client-5.7 (5.7.42-0ubuntu0.18.04.1) ...\r\nSetting up mysql-client (5.7.42-0ubuntu0.18.04.1) ...\r\nProcessing triggers for man-db (2.8.3-2ubuntu0.1) ...\r\nProcessing triggers for libc-bin (2.27-3ubuntu1.6) ...\r\n",
    "stdout_lines": [
        "Reading package lists...",
        "Building dependency tree...",
        "Reading state information...",
        "The following additional packages will be installed:",
        "  libaio1 mysql-client-5.7 mysql-client-core-5.7 mysql-common",
        "The following NEW packages will be installed:",
        "  libaio1 mysql-client mysql-client-5.7 mysql-client-core-5.7 mysql-common",
        "0 upgraded, 5 newly installed, 0 to remove and 0 not upgraded.",
        "Need to get 8804 kB of archives.",
        "After this operation, 62.1 MB of additional disk space will be used.",
        "Get:1 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libaio1 amd64 0.3.110-5ubuntu0.1 [6476 B]",
        "Get:2 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 mysql-client-core-5.7 amd64 5.7.42-0ubuntu0.18.04.1 [6752 kB]",
        "Get:3 http://azure.archive.ubuntu.com/ubuntu bionic/main amd64 mysql-common all 5.8+1.0.4 [7308 B]",
        "Get:4 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 mysql-client-5.7 amd64 5.7.42-0ubuntu0.18.04.1 [2028 kB]",
        "Get:5 http://azure.archive.ubuntu.com/ubuntu bionic-updates/main amd64 mysql-client all 5.7.42-0ubuntu0.18.04.1 [9824 B]",
        "Fetched 8804 kB in 0s (40.1 MB/s)",
        "Selecting previously unselected package libaio1:amd64.",
        "(Reading database ... ",
        "(Reading database ... 5%",
        "(Reading database ... 10%",
        "(Reading database ... 15%",
        "(Reading database ... 20%",
        "(Reading database ... 25%",
        "(Reading database ... 30%",
        "(Reading database ... 35%",
        "(Reading database ... 40%",
        "(Reading database ... 45%",
        "(Reading database ... 50%",
        "(Reading database ... 55%",
        "(Reading database ... 60%",
        "(Reading database ... 65%",
        "(Reading database ... 70%",
        "(Reading database ... 75%",
        "(Reading database ... 80%",
        "(Reading database ... 85%",
        "(Reading database ... 90%",
        "(Reading database ... 95%",
        "(Reading database ... 100%",
        "(Reading database ... 59190 files and directories currently installed.)",
        "Preparing to unpack .../libaio1_0.3.110-5ubuntu0.1_amd64.deb ...",
        "Unpacking libaio1:amd64 (0.3.110-5ubuntu0.1) ...",
        "Selecting previously unselected package mysql-client-core-5.7.",
        "Preparing to unpack .../mysql-client-core-5.7_5.7.42-0ubuntu0.18.04.1_amd64.deb ...",
        "Unpacking mysql-client-core-5.7 (5.7.42-0ubuntu0.18.04.1) ...",
        "Selecting previously unselected package mysql-common.",
        "Preparing to unpack .../mysql-common_5.8+1.0.4_all.deb ...",
        "Unpacking mysql-common (5.8+1.0.4) ...",
        "Selecting previously unselected package mysql-client-5.7.",
        "Preparing to unpack .../mysql-client-5.7_5.7.42-0ubuntu0.18.04.1_amd64.deb ...",
        "Unpacking mysql-client-5.7 (5.7.42-0ubuntu0.18.04.1) ...",
        "Selecting previously unselected package mysql-client.",
        "Preparing to unpack .../mysql-client_5.7.42-0ubuntu0.18.04.1_all.deb ...",
        "Unpacking mysql-client (5.7.42-0ubuntu0.18.04.1) ...",
        "Setting up mysql-common (5.8+1.0.4) ...",
        "update-alternatives: using /etc/mysql/my.cnf.fallback to provide /etc/mysql/my.cnf (my.cnf) in auto mode",
        "Setting up libaio1:amd64 (0.3.110-5ubuntu0.1) ...",
        "Setting up mysql-client-core-5.7 (5.7.42-0ubuntu0.18.04.1) ...",
        "Setting up mysql-client-5.7 (5.7.42-0ubuntu0.18.04.1) ...",
        "Setting up mysql-client (5.7.42-0ubuntu0.18.04.1) ...",
        "Processing triggers for man-db (2.8.3-2ubuntu0.1) ...",
        "Processing triggers for libc-bin (2.27-3ubuntu1.6) ..."
    ]
}
pauloenrique@pauloenrique-Latitude-E7450:~/Documents/Development/Ansible-labs/Lab02$ 

